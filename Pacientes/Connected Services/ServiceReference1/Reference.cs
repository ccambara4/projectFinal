//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pacientes.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.PersonasSoap")]
    public interface PersonasSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ver_Todo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Ver_Todo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ver_Todo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Ver_TodoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insertar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insertar(string DPI, string NOMBRE, string APELLIDO, string DIRECCION, string DESCRIPCION_PROBLEMA, int CELULAR, int CELULAR_FAMILIAR, int ID_DOCTOR, int ID_HOSPITAL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insertar", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarAsync(string DPI, string NOMBRE, string APELLIDO, string DIRECCION, string DESCRIPCION_PROBLEMA, int CELULAR, int CELULAR_FAMILIAR, int ID_DOCTOR, int ID_HOSPITAL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Actualizar(string DPI, string NOMBRE, string APELLIDO, string DIRECCION, string DESCRIPCION_PROBLEMA, int CELULAR, int CELULAR_FAMILIAR, int ID_DOCTOR, int ID_HOSPITAL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ActualizarAsync(string DPI, string NOMBRE, string APELLIDO, string DIRECCION, string DESCRIPCION_PROBLEMA, int CELULAR, int CELULAR_FAMILIAR, int ID_DOCTOR, int ID_HOSPITAL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Eliminar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Eliminar(string DPI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Eliminar", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EliminarAsync(string DPI);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PersonasSoapChannel : Pacientes.ServiceReference1.PersonasSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonasSoapClient : System.ServiceModel.ClientBase<Pacientes.ServiceReference1.PersonasSoap>, Pacientes.ServiceReference1.PersonasSoap {
        
        public PersonasSoapClient() {
        }
        
        public PersonasSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonasSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonasSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonasSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet Ver_Todo() {
            return base.Channel.Ver_Todo();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Ver_TodoAsync() {
            return base.Channel.Ver_TodoAsync();
        }
        
        public string Insertar(string DPI, string NOMBRE, string APELLIDO, string DIRECCION, string DESCRIPCION_PROBLEMA, int CELULAR, int CELULAR_FAMILIAR, int ID_DOCTOR, int ID_HOSPITAL) {
            return base.Channel.Insertar(DPI, NOMBRE, APELLIDO, DIRECCION, DESCRIPCION_PROBLEMA, CELULAR, CELULAR_FAMILIAR, ID_DOCTOR, ID_HOSPITAL);
        }
        
        public System.Threading.Tasks.Task<string> InsertarAsync(string DPI, string NOMBRE, string APELLIDO, string DIRECCION, string DESCRIPCION_PROBLEMA, int CELULAR, int CELULAR_FAMILIAR, int ID_DOCTOR, int ID_HOSPITAL) {
            return base.Channel.InsertarAsync(DPI, NOMBRE, APELLIDO, DIRECCION, DESCRIPCION_PROBLEMA, CELULAR, CELULAR_FAMILIAR, ID_DOCTOR, ID_HOSPITAL);
        }
        
        public string Actualizar(string DPI, string NOMBRE, string APELLIDO, string DIRECCION, string DESCRIPCION_PROBLEMA, int CELULAR, int CELULAR_FAMILIAR, int ID_DOCTOR, int ID_HOSPITAL) {
            return base.Channel.Actualizar(DPI, NOMBRE, APELLIDO, DIRECCION, DESCRIPCION_PROBLEMA, CELULAR, CELULAR_FAMILIAR, ID_DOCTOR, ID_HOSPITAL);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarAsync(string DPI, string NOMBRE, string APELLIDO, string DIRECCION, string DESCRIPCION_PROBLEMA, int CELULAR, int CELULAR_FAMILIAR, int ID_DOCTOR, int ID_HOSPITAL) {
            return base.Channel.ActualizarAsync(DPI, NOMBRE, APELLIDO, DIRECCION, DESCRIPCION_PROBLEMA, CELULAR, CELULAR_FAMILIAR, ID_DOCTOR, ID_HOSPITAL);
        }
        
        public string Eliminar(string DPI) {
            return base.Channel.Eliminar(DPI);
        }
        
        public System.Threading.Tasks.Task<string> EliminarAsync(string DPI) {
            return base.Channel.EliminarAsync(DPI);
        }
    }
}
